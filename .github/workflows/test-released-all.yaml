name: "Test Release: ALL - Trigger Release Build Tests"

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to test"
        required: true
        default: "12.0.0"
  release:
    types: [published]

env:
  # C07QZDJFF89 == #release-coordination
  SLACK_BOT_CHANNEL_ID: "C07QZDJFF89"

jobs:
  parse-inputs:
    uses: ./.github/workflows/parse_inputs.yml
    with:
      skip-publish: ${{ inputs.skip-publish }}
      version: ${{ inputs.version }}
      bucket: ${{ inputs.bucket }}

  check-version:
    needs: [parse-inputs]
    runs-on: ubuntu-latest
    steps:
      - run: |
          VERSION="${{ needs.parse-inputs.outputs.version }}"
          echo "Checking version: $VERSION"
          if [[ "$VERSION" == *"-"* ]]; then
            echo "❌ Prerelease versions are not allowed ($VERSION)"
            exit 1
          fi
          echo "✅ Version $VERSION is allowed"

  notification-start:
    name: Send Slack notification
    needs: [check-version]
    runs-on: ubuntu-latest
    outputs:
      update-ts: ${{ steps.slack.outputs.ts }}
    steps:
      - id: slack
        uses: slackapi/slack-github-action@v2.1.1
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: "${{ env.SLACK_BOT_CHANNEL_ID }}"
            text: "GitHub Actions Run"
            attachments:
              - color: "#FFFF00"
                blocks:
                  - type: "section"
                    fields:
                      - type: "mrkdwn"
                        text: "<${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}|${{ github.workflow }}>"
                      - type: "mrkdwn"
                        text: "*Status:*\n`In Progress`"
                      - type: "mrkdwn"
                        text: "*Version:*\n`${{ needs.parse-inputs.outputs.version }}`"

  setup:
    runs-on: ubuntu-latest
    needs: notification-start
    name: 'Unify Inputs'
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set Version (Workflow Dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo VERSION=${{ inputs.version }} >> $GITHUB_ENV
      - name: Set Version (Release Event)
        if: github.event_name == 'release'
        run: |
          echo VERSION=${{ github.event.release.tag_name }} >> $GITHUB_ENV
      - name: Unified Version
        id: version
        run: |
          INPUT_NAME=${{ inputs.name }}
          if [[ ${INPUT_NAME} == '' ]]; then
            echo "Name is empty, using default"
            echo "name=mondoo" >> $GITHUB_OUTPUT
          else
            echo "Name: ${INPUT_NAME}"
            echo "name=${INPUT_NAME}" >> $GITHUB_OUTPUT
          fi
          V=$(echo $VERSION | sed 's/v//')
          echo "Version: $V"
          echo "version=${V}" >> $GITHUB_OUTPUT
      # wait for versioned ubi-rootless container image to be published, otherwise tests will fail directly
      # This may take some time, it one of the last images to be created
      # Chances are high, that most of the tests will pass on the first try with this.
      - name: Wait for packages to be published (Release Event)
        if: github.event_name == 'release'
        id: check_release_file
        uses: nick-fields/retry@v3
        with:
          retry_wait_seconds: 20
          timeout_seconds: 5
          max_attempts: 100
          retry_on: error
          # error on HTTP code different to 200
          command: |
            vSEMVER=${{ steps.version.outputs.version }}
            SEMVER="${vSEMVER//v}"
            curl -o /dev/null -s -w "%{http_code}\n" "https://registry.hub.docker.com/v2/repositories/mondoo/client/tags/${SEMVER}-ubi-rootless" | grep 200


  test-arch:
    needs: [setup, notification-start]
    uses: ./.github/workflows/test-released-archlinux.yaml
    with:
      version: ${{ needs.setup.outputs.version }}
  test-docker:
    needs: [setup, notification-start]
    uses: ./.github/workflows/test-released-docker.yaml
    with:
      version: ${{ needs.setup.outputs.version }}
  test-install-sh:
    needs: [setup, notification-start]
    uses: ./.github/workflows/test-released-install-sh.yaml
    with:
      version: ${{ needs.setup.outputs.version }}
  test-install-ps1:
    needs: [setup, notification-start]
    uses: ./.github/workflows/test-released-install-ps1.yaml
    with:
      version: ${{ needs.setup.outputs.version }}
  test-osx-pkg:
    needs: [setup, notification-start]
    uses: ./.github/workflows/test-released-osx-pkg.yaml
    with:
      version: ${{ needs.setup.outputs.version }}
  test-brew:
    needs: [setup, notification-start]
    uses: ./.github/workflows/test-released-brew.yaml
    with:
      version: ${{ needs.setup.outputs.version }}

  notification:
    runs-on: ubuntu-latest
    name: Update Slack notification
    needs: [test-arch, test-docker, test-install-sh, test-install-ps1, test-osx-pkg, test-brew, notification-start, setup]
    if: ${{ always() }}
    steps:
      - name: Set status
        id: status
        run: |
          echo "status_success=${{ needs.setup.result == 'success' && needs.test-arch.result == 'success' && needs.test-docker.result == 'success' && needs.test-install-sh.result == 'success' && needs.test-install-ps1.result == 'success' && needs.test-osx-pkg.result == 'success' && needs.test-brew.result == 'success' }}" >> $GITHUB_OUTPUT
      - uses: slackapi/slack-github-action@v2.1.1
        if : ${{ always() }}
        with:
          method: chat.update
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: "${{ env.SLACK_BOT_CHANNEL_ID }}"
            ts: "${{ needs.notification-start.outputs.update-ts }}"
            text: "GitHub Actions Run"
            attachments:
              - color: "${{ steps.status.outputs.status_success == 'true' && '#00FF00' || '#FF0000' }}"
                blocks:
                  - type: "section"
                    fields:
                      - type: "mrkdwn"
                        text: "<${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}/attempts/${{ github.run_attempt }}|${{ github.workflow }}>"
                      - type: "mrkdwn"
                        text: "*Status:*\n`${{ steps.status.outputs.status_success == 'true' && 'Success' || 'Failed' }}`"
                      - type: "mrkdwn"
                        text: "*Version:*\n`${{ needs.parse-inputs.outputs.version }}`"
