name: "PKG: Microsoft Software Installer (MSI)"

on:
  workflow_call:
    inputs:
      version:
        description: "Package Version"
        required: true
        default: "8.99.99"
        type: "string"
      skip-publish:
        description: "Skip publish?"
        required: false
        default: false
        type: boolean
      bucket:
        description: "GCP Release Bucket Name"
        required: true
        default: "releases-us.mondoo.io"
        type: string
      use-test-cert:
        description: "Use test certificate profile (not publicly trusted)"
        required: false
        default: false
        type: boolean
  workflow_dispatch:
    inputs:
      version:
        description: "Package Version"
        required: true
        default: "0.0.1"
        type: "string"
      skip-publish:
        description: "Skip publish?"
        required: false
        default: false
        type: boolean
      bucket:
        description: "GCP Release Bucket Name"
        required: true
        default: "releases-us.mondoo.io"
        type: string
      use-test-cert:
        description: "Use test certificate profile (not publicly trusted)"
        required: false
        default: false
        type: boolean

jobs:
  setup:
    name: "Setup"
    runs-on: ubuntu-latest
    steps:
      - name: Ensure version of cnquery and cnspec are available
        run: |
          curl -sL --head --fail https://github.com/mondoohq/cnquery/releases/download/v${{ inputs.version }}/cnquery_${{ inputs.version }}_windows_amd64.zip \
            https://github.com/mondoohq/cnspec/releases/download/v${{ inputs.version }}/cnspec_${{ inputs.version }}_windows_amd64.zip \
            https://github.com/mondoohq/cnquery/releases/download/v${{ inputs.version }}/cnquery_${{ inputs.version }}_windows_arm64.zip \
            https://github.com/mondoohq/cnspec/releases/download/v${{ inputs.version }}/cnspec_${{ inputs.version }}_windows_arm64.zip

  dist-prepare:
    name: Prepare Distribution for Packaging
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download Binaries
        env:
          VERSION: ${{ inputs.version }}
        run: |
          # TODO: We should check the sums here
          mkdir -p dist/${{ matrix.arch }} && cd dist/${{ matrix.arch }}
          curl -sSL -O https://github.com/mondoohq/cnspec/releases/download/v${VERSION}/cnspec_${VERSION}_windows_${{ matrix.arch }}.zip
          unzip cnspec_${VERSION}_windows_${{ matrix.arch }}.zip
          rm cnspec_${VERSION}_windows_${{ matrix.arch }}.zip

          curl -sSL -O https://github.com/mondoohq/cnquery/releases/download/v${VERSION}/cnquery_${VERSION}_windows_${{ matrix.arch }}.zip
          unzip cnquery_${VERSION}_windows_${{ matrix.arch }}.zip
          rm cnquery_${VERSION}_windows_${{ matrix.arch }}.zip
          ls -lh
      - name: Upload Distribution
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.arch }}
          path: dist/${{ matrix.arch }}

  msi-build:
    name: "Packaging: Windows MSI"
    runs-on: windows-latest
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
    needs:
      - setup
      - dist-prepare
    #  For Version: ${{ inputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download Distribution
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ matrix.arch }}
          path: dist/${{ matrix.arch }}

      - name: Build MSI
        env:
          VERSION: ${{ inputs.version }}
        run: |
          $mondooVersion = ${env:VERSION}
          echo "Running build job for version ${mondooVersion}"
          Copy-Item .\dist\${{ matrix.arch }}\cnquery.exe .\packages\msi\msi\
          Copy-Item .\dist\${{ matrix.arch }}\cnspec.exe .\packages\msi\msi\
          Copy-Item .\dist\${{ matrix.arch }}\cnquery.exe .\packages\msi\appx\
          Copy-Item .\dist\${{ matrix.arch }}\cnspec.exe .\packages\msi\appx\
          # build msi package
          echo " - Packaging MSI..."
          Set-Location -Path '.\packages\msi\'
          ./package.ps1 -version $mondooVersion -arch ${{ matrix.arch }}

      - name: Sign files with Trusted Signing
        uses: azure/trusted-signing-action@v0
        with:
          azure-tenant-id: ${{ vars.TSIGN_AZURE_TENANT_ID }}
          azure-client-id: ${{ secrets.TSIGN_AZURE_CLIENT_ID }}
          azure-client-secret: ${{ secrets.TSIGN_AZURE_CLIENT_SECRET }}
          endpoint: ${{ vars.TSIGN_AZURE_ENDPOINT }}
          trusted-signing-account-name: ${{ vars.TSIGN_ACCOUNT_NAME }}
          # Conditional logic for switching certificate-profile-name type
          certificate-profile-name: ${{ github.event.inputs.use-test-cert == 'true' && vars.TSIGN_TEST_CERT_PROFILE_NAME || vars.TSIGN_CERT_PROFILE_NAME }}
          files: |
            .\packages\msi\mondoo_${{ matrix.arch }}.msi
          file-digest: SHA256
          timestamp-rfc3161: http://timestamp.acs.microsoft.com
          timestamp-digest: SHA384
          exclude-environment-credential: false
          exclude-workload-identity-credential: true
          exclude-managed-identity-credential: true
          exclude-shared-token-cache-credential: true
          exclude-visual-studio-credential: true
          exclude-visual-studio-code-credential: true
          exclude-azure-cli-credential: true
          exclude-azure-powershell-credential: true
          exclude-azure-developer-cli-credential: true
          exclude-interactive-browser-credential: true

      - name: Cleanup dist before upload
        run: |
          Copy-Item '.\packages\msi\mondoo_${{ matrix.arch }}.msi' '.\dist\${{ matrix.arch }}'
          Remove-Item -Path .\dist\${{ matrix.arch }}\cnquery.exe -Force
          Remove-Item -Path .\dist\${{ matrix.arch }}\cnspec.exe -Force

      - name: Upload Distribution
        uses: actions/upload-artifact@v4
        with:
          name: msi-${{ matrix.arch }}
          path: dist/${{ matrix.arch }}

  test-msi-install:
    name: Test Signed Package
    strategy:
      matrix:
        arch:
          - amd64
    #          - arm64 # we currently don't have windows arm64 runners to test arm against
    needs:
      - setup
      - msi-build
    runs-on: windows-latest
    steps:
      - name: Download MSI Package
        uses: actions/download-artifact@v4
        with:
          name: msi-${{ matrix.arch }}
          path: dist
      - name: Verify digital signature is valid
        run: |
          cd dist
          Get-AuthenticodeSignature -FilePath .\\mondoo_${{ matrix.arch }}.msi
      - name: Install artifact
        run: |
          $TEMP_PATH = $env:TEMP
          cd dist
          $msiexec = Start-Process "msiexec" "/i mondoo_${{ matrix.arch }}.msi /qn /l*! install.log" -NoNewWindow -PassThru
          $gci = Start-Process "powershell" "Get-Content -Path install.log -Wait" -NoNewWindow -PassThru
          $msiexec.WaitForExit() 
          $gci.Kill()
          gci
      - name: Verify the correct cnquery version is installed
        run: |
          $version=& 'C:\Program Files\Mondoo\cnquery.exe' version
          Write-Output "comparing $version -like '*${{ inputs.version }}*'"
          $match=$version -like "*${{ inputs.version }}*"
          if (-not $match) {
            exit 1
          }
      - name: Run a basic cnquery sanity check
        run: |
          & 'C:\Program Files\Mondoo\cnquery.exe' run -c "os.base.packages.where(name == 'Mondoo') { name }"
      - name: Verify the correct cnspec version is installed
        run: |
          $version=& 'C:\Program Files\Mondoo\cnspec.exe' version
          Write-Output "comparing $version -like '*${{ inputs.version }}*'"
          $match=$version -like "*${{ inputs.version }}*"
          if (-not $match) {
            exit 1
          }
      - name: Run a basic cnspec sanity check
        run: |
          & 'C:\Program Files\Mondoo\cnspec.exe' run -c "os.base.packages.where(name == 'Mondoo') { name }"
      - name: Login to edge with cnspec
        run: |
          & 'C:\Program Files\Mondoo\cnspec.exe' login -t "${{ secrets.INSTALL_TEST_MONDOO_REGISTRATION_TOKEN }}" --config C:\ProgramData\Mondoo\mondoo.yml
      - name: Run a basic cnspec sanity check
        run: |
          & 'C:\Program Files\Mondoo\cnspec.exe' policy download mondoo-windows-installer -f mondoo-windows-installer.mql.yaml
          & 'C:\Program Files\Mondoo\cnspec.exe' scan local --detect-cicd --score-threshold 100 -o full --policy-bundle mondoo-windows-installer.mql.yaml
      - name: Logout from edge with cnspec
        run: |
          & 'C:\Program Files\Mondoo\cnspec.exe' logout --config C:\ProgramData\Mondoo\mondoo.yml --force

  publish:
    name: "Publish: Releases"
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
    needs:
      - setup
      - msi-build
      - test-msi-install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download MSI Package
        uses: actions/download-artifact@v4
        with:
          name: msi-${{ matrix.arch }}
          path: dist
      - name: Authenticate with Google Cloud
        id: gauth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{secrets.GCP_CREDENTIALS}}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      - name: Verify access to release bucket
        env:
          VERSION: ${{ inputs.version }}
        run: |
          gsutil ls gs://${{ inputs.bucket }}/mondoo
      - name: Upload static content to buckets
        env:
          VERSION: ${{ inputs.version }}
          SKIP: ${{ inputs.skip-publish && 'echo skipping...' || '' }}
        run: |
          cd dist
          mv mondoo_${{ matrix.arch }}.msi mondoo_${VERSION}_windows_${{ matrix.arch }}.msi
          sha256sum mondoo_${VERSION}_windows_${{ matrix.arch }}.msi >> checksums.windows_${{ matrix.arch }}.txt
          $SKIP gsutil cp checksums.windows_${{ matrix.arch }}.txt gs://${{ inputs.bucket }}/mondoo/${VERSION}/checksums.windows_${{ matrix.arch }}.txt
          $SKIP gsutil cp mondoo_${VERSION}_windows_${{ matrix.arch }}.msi gs://${{ inputs.bucket }}/mondoo/${VERSION}/mondoo_${VERSION}_windows_${{ matrix.arch }}.msi
      - name: Cleanup
        run: |
          rm -f "${{ steps.gauth.outputs.credentials_file_path }}"
