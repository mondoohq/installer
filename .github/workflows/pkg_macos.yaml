name: 'PKG: macOS Universal pkg Release'

on:
  workflow_call:
    inputs:
      version:
        description: 'Package Version'
        required: true
        default: '8.99.99'
        type: 'string'
      name:
        description: 'Package Name'
        required: false
        default: 'mondoo'
        type: 'string'
      skip-publish:
        description: 'Skip publish?'
        required: false
        default: false
        type: boolean
      bucket:
        description: 'GCP Release Bucket Name'
        required: true
        default: 'releases-us.mondoo.io'
        type: string
  workflow_dispatch:
    inputs:
      version:
        description: 'Package Version'
        required: true
        default: '0.0.1'
        type: 'string'
      name:
        description: 'Package Name'
        required: false
        default: 'mondoo'
        type: 'string'
      skip-publish:
        description: 'Skip publish?'
        required: false
        default: false
        type: boolean
      bucket:
        description: 'GCP Release Bucket Name'
        required: true
        default: 'releases-us.mondoo.io'
        type: choice
        options:
          - 'releases-us.mondoo.io'
          - 'releases-com-test'

jobs:
  pkg:
    name: 'Packaging: Mac'
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Ensure version of cnquery and cnspec are available
        run: |
          curl -sL --head --fail https://github.com/mondoohq/cnquery/releases/download/v${{ inputs.version }}/cnquery_${{ inputs.version }}_darwin_amd64.tar.gz
          curl -sL --head --fail https://github.com/mondoohq/cnspec/releases/download/v${{ inputs.version }}/cnspec_${{ inputs.version }}_darwin_amd64.tar.gz
      - name: Setup local keychain for signing certificates
        run: |
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
          # Setup Keychain:
          security create-keychain -p ${{ secrets.APPLE_KEYCHAIN_PASSWORD }} $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p ${{ secrets.APPLE_KEYCHAIN_PASSWORD }} $KEYCHAIN_PATH
          # Import Certificates:
          echo "${{ secrets.APPLE_KEYS_PRODUCTSIGN_P12 }}" | base64 --decode > $RUNNER_TEMP/AppleKeysProductSign.p12
          echo "${{ secrets.APPLE_KEYS_CODESIGN_P12 }}"  | base64 --decode > $RUNNER_TEMP/AppleKeysCodeSign.p12
          security import $RUNNER_TEMP/AppleKeysProductSign.p12 -P ${{ secrets.APPLE_KEYS_PASSWORD }} -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security import $RUNNER_TEMP/AppleKeysCodeSign.p12 -P ${{ secrets.APPLE_KEYS_PASSWORD }} -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH
      ########## Build Package. ##########
      - name: Run Mac Packager
        env:
          APPLE_KEYS_CODESIGN_ID: ${{ secrets.APPLE_KEYS_CODESIGN_ID }}
          APPLE_KEYS_PRODUCTSIGN_ID: ${{ secrets.APPLE_KEYS_PRODUCTSIGN_ID }}
          PKGNAME: ${{ inputs.name }}
        run: |
          ${GITHUB_WORKSPACE}/packages/macos/build-pkg.sh ${{ inputs.version }}
      - name: Inspect Distribution
        if: ${{ always() }}
        run: ls -lhR
      ########## Sign Package. ##########
      - name: Package Sign Package (productsign)
        run: |
          productsign --sign "${{ secrets.APPLE_KEYS_PRODUCTSIGN_ID }}" dist/${{ inputs.name }}-macos-universal-${{ inputs.version }}.pkg dist/${{ inputs.name }}_${{ inputs.version }}_darwin_universal.pkg
      ########## Sign Package. ##########
      - name: Notarize Package
        uses: lando/notarize-action@b5c3ef16cf2fbcf2af26dc58c90255ec242abeed # v2.0.2
        with:
          product-path: dist/${{ inputs.name }}_${{ inputs.version }}_darwin_universal.pkg
          appstore-connect-username: ${{ secrets.APPLE_ACCOUNT_USERNAME }}
          appstore-connect-password: ${{ secrets.APPLE_ACCOUNT_PASSWORD }}
          appstore-connect-team-id: ${{ secrets.APPLE_ACCOUNT_TEAM_ID }}
          primary-bundle-id: 'com.${{ inputs.name }}.client'
      - name: "Staple Release Build"
        uses: mondoohq/xcode-staple@b6e11c09bc87790744f6e6d6f66f3be98f4dce48 # v1
        with:
          product-path: dist/${{ inputs.name }}_${{ inputs.version }}_darwin_universal.pkg
      ########## Save Package as Artifact. ##########
      - name: Archive Notarized Package
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: notarized-package
          path: dist/${{ inputs.name }}_${{ inputs.version }}_darwin_universal.pkg
          retention-days: 30

  publish:
    name: 'Publish: Releases'
    needs: pkg
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Download Notarized Package
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: notarized-package
          path: dist
      - name: Get Version & Checksum
        run: |
          cd dist
          # Ensure we only have a single file
          FILES=`ls *.pkg | wc -l`
          if [[ $FILES != 1 ]]; then
            echo "We have more than one file in the dist folder. This is not expected."
            exit 1
          fi
          sha256sum ${{ inputs.name }}_${{ inputs.version }}_darwin_universal.pkg | tee -a checksums.macos.txt
      - name: Authenticate with Google Cloud
        uses: 'google-github-actions/auth@c200f3691d83b41bf9bbd8638997a462592937ed' # v2.1.13
        with:
          credentials_json: '${{secrets.GCP_CREDENTIALS}}'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@e427ad8a34f8676edf47cf7d7925499adf3eb74f' # v2.2.1
      - name: Verify access to release bucket
        run: |
          gsutil ls gs://${{ inputs.bucket }}/mondoo
      - name: Upload static content to buckets
        env:
          SKIP: ${{ inputs.skip-publish && 'echo skipping...' || '' }}
        run: |
          cd dist
          $SKIP gsutil cp checksums.macos.txt gs://${{ inputs.bucket }}/mondoo/${{ inputs.version }}/checksums.macos.txt
          $SKIP gsutil cp ${{ inputs.name }}_${{ inputs.version }}_darwin_universal.pkg gs://${{ inputs.bucket }}/mondoo/${{ inputs.version }}/${{ inputs.name }}_${{ inputs.version }}_darwin_universal.pkg
