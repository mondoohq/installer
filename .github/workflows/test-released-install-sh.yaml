name: "Test Release: install.sh"

on:
  workflow_call:
    inputs:
      version:
        description: "Version to test"
        required: true
        default: "11.0.0"
        type: string
  workflow_dispatch:
    inputs:
      version:
        description: "Version to test"
        required: true
        default: "11.0.0"

jobs:
  install-sh-apt:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: ["cnspec", "cnquery"]
        distro:
          [
            "debian:11",
            "debian:12",
            "ubuntu:18.04",
            "ubuntu:20.04",
            "ubuntu:22.04",
            "ubuntu:24.04",
          ]
    steps:
      - uses: actions/checkout@v4
      - name: Version
        id: version
        run: |
          V=${{ inputs.version }}
          VERSION=$(echo $V | sed 's/^v//')
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
      - name: Install.sh/${{ matrix.package }} on ${{ matrix.distro }}
        run: |
          docker run --rm -v $(pwd):/work -w /work ${{ matrix.distro }} \
          bash -c "apt-get update && apt-get install -y curl && curl -sSL https://install.mondoo.com/sh/${{ matrix.package }} | bash -x - && ${{ matrix.package }} version | grep -q ${{ steps.version.outputs.version }}"

  install-sh-yum:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: ["cnspec", "cnquery"]
        distro:
          [
            "quay.io/centos/centos:stream9",
            "fedora:40",
            "fedora:41",
            "rockylinux:8",
            "rockylinux:9",
            "redhat/ubi8",
            "redhat/ubi9",
            "redhat/ubi10",
            "oraclelinux:8",
            "oraclelinux:9",
          ]
        ## Note: centos:8 is obsoleted by Centos Stream 9 and EOL, do not use, refer to https://www.centos.org/centos-linux-eol/
    steps:
      - uses: actions/checkout@v4
      - name: Version
        id: version
        run: |
          V=${{ inputs.version }}
          VERSION=$(echo $V | sed 's/^v//')
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
      - name: Install.sh/${{ matrix.package }} on ${{ matrix.distro }}
        run: |
          docker run --rm -v $(pwd):/work -w /work ${{ matrix.distro }} \
          bash -c "curl -sSL https://install.mondoo.com/sh/${{ matrix.package }} | bash - && ${{matrix.package }} version | grep -q ${{ steps.version.outputs.version }}"

  install-sh-zypper:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package: ["cnspec", "cnquery"]
        distro:
          [
            "registry.suse.com/suse/sle15:15.6",
          ]
    steps:
      - uses: actions/checkout@v4
      - name: Version
        id: version
        run: |
          V=${{ inputs.version }}
          VERSION=$(echo $V | sed 's/^v//')
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
      - name: Install.sh/${{ matrix.package }} on ${{ matrix.distro }}
        run: |
          docker run --rm -v $(pwd):/work -w /work ${{ matrix.distro }} \
          bash -c "curl -sSL https://install.mondoo.com/sh/${{ matrix.package }} | bash - && ${{matrix.package }} version | grep -q ${{ steps.version.outputs.version }}"

  install-sh-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        os: ["macos-latest"]
        package: ["cnspec", "cnquery"]
    steps:
      - uses: actions/checkout@v4
      - name: Version
        id: version
        run: |
          V=${{ inputs.version }}
          VERSION=$(echo $V | sed 's/^v//')
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
      - name: Install.sh/${{ matrix.package }} on ${{ matrix.os }}
        run: |
          bash -c "$(curl -sSL https://install.mondoo.com/sh/${{ matrix.package }})"
          ${{ matrix.package }} version
      - name: Verify the correct version is installed
        run: |
          ${{ matrix.package }} version | grep -q ${{ steps.version.outputs.version }}

